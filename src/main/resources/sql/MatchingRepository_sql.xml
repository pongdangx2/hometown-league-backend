<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.lkh.hometownleague.matching.repository.MatchingRepository">

    <select id="selectMatchingRequest" parameterType="Integer" resultType="Integer">
        SELECT id
        FROM matching_request_info
        WHERE process_yn = 'N'
          AND team_id = #{teamId}
    </select>

    <select id="selectMatchingInProgress" parameterType="Integer" resultType="Integer">
        SELECT b.id
        FROM  matching_request_info a LEFT OUTER JOIN matching_request_mapping b
                                                      ON (a.team_id = b.b_team_matching_request_id OR a.team_id = b.a_team_matching_request_id) AND b.status != 'E'
        WHERE a.team_id = #{teamId}
    </select>

    <insert id="insertMatchingRequest" parameterType="Integer">
        INSERT INTO matching_request_info(team_id, process_yn, request_timestamp)
        VALUES(#{teamId}, 'N', NOW())
    </insert>

    <select id="selectMatching" parameterType="String" resultType="me.lkh.hometownleague.matching.domain.MatchingListElement">
        SELECT a.team_id, b.id, b.process_yn, c.name, c.rank_score, c.kind, c.description,
               CASE WHEN d.id IS NULL THEN 'W' -- 대기
                    ELSE d.status
                   END AS status,
               CASE WHEN d.id IS NULL THEN (SELECT code_name FROM common_code WHERE use_yn='Y' AND group_id='0011' AND code='W')
                    ELSE (SELECT code_name FROM common_code WHERE use_yn='Y' AND group_id='0011' AND code=d.status)
                   END AS status_name,
               DATE_FORMAT(d.match_timestamp, '%Y%m%d%H%i') AS match_timestamp
        FROM team_user_mapping a INNER JOIN matching_request_info b ON a.team_id = b.team_id
                                 INNER JOIN team_info c ON a.team_id = c.id AND c.use_yn = 'Y'
                                 LEFT OUTER JOIN matching_request_mapping d ON (b.id = d.b_team_matching_request_id OR b.id = d.a_team_matching_request_id)
        WHERE a.user_id = #{userId}
    </select>

    <select id="selectMatchingDetailBase" parameterType="Integer" resultType="me.lkh.hometownleague.matching.domain.response.MatchingDetailBase">
        SELECT b.id
             , a.team_id
             , CASE WHEN a.id = b.a_team_matching_request_id THEN b.b_team_matching_request_id
                    ELSE b.a_team_matching_request_id
               END
             , DATE_FORMAT(a.request_timestamp, '%Y%m%d%H%i') AS requestTime
             , DATE_FORMAT(b.create_timestamp, '%Y%m%d%H%i') AS makeTime
             , DATE_FORMAT(b.match_timestamp, '%Y%m%d%H%i') AS matchTime
             , IFNULL(b.status, 'W')
             , (SELECT code_name FROM common_code WHERE group_id = '0011' AND code = IFNULL(b.status, 'W') AND use_yn = 'Y')
             , b.latitude
             , b.longitude
             , b.road_address
             , b.jibun_address
        FROM matching_request_info a LEFT OUTER JOIN matching_request_mapping b ON (a.id = b.a_team_matching_request_id OR a.id = b.b_team_matching_request_id)
        WHERE a.id = #{matchingRequestId}
    </select>

    <select id="selectMatchingDetailTeam" parameterType="Integer" resultType="me.lkh.hometownleague.matching.domain.response.MatchingDetailTeam">
        SELECT a.team_id
             , CASE WHEN b.id IS NULL THEN 'W' -- 대기
                    ELSE b.status
                END AS status
             , CASE WHEN b.id IS NULL THEN (SELECT code_name FROM common_code WHERE use_yn='Y' AND group_id='0011' AND code='W')
                    ELSE (SELECT code_name FROM common_code WHERE use_yn='Y' AND group_id='0011' AND code=b.status)
               END AS status_name
             , DATE_FORMAT(b.accept_timestamp, '%Y%m%d%H%i') AS accept_time
        FROM matching_request_info a LEFT OUTER JOIN matching_info b ON a.id = b.matching_request_id
        WHERe a.id = #{matchingRequestId}
    </select>

    <select id="matchingRequestDeleteCheck" parameterType="Integer" resultType="me.lkh.hometownleague.schedule.matching.domain.MatchingRequestDeleteCheck">
        SELECT a.id, a.team_id, a.process_yn, b.status, b.id
        FROM matching_request_info a LEFT OUTER JOIN matching_request_mapping b ON(a.id = b.a_team_matching_request_id OR a.id = b.b_team_matching_request_id)
        WHERE a.id = #{matchingRequestId}
    </select>

    <delete id="deleteMatchingRequest" parameterType="Integer">
        DELETE FROM matching_request_info
        WHERE id = #{matchingRequestId}
    </delete>

    <select id="selectMatchingInfo" parameterType="Integer" resultType="me.lkh.hometownleague.matching.domain.MatchingInfo">
        SELECT a.id, a.matching_request_id, a.status, DATE_FORMAT(a.accept_timestamp, '%Y%m%d%H%i') as accept_timestamp
        FROM matching_info a
        WHERE a.matching_request_id = #{matchingRequestId}
    </select>

    <update id="updateMatchingInfoToAccept" parameterType="Integer">
        UPDATE matching_info
        SET status = 'S'
           ,accept_timestamp = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateMatchingRequestMapping" parameterType="me.lkh.hometownleague.matching.domain.MatchingRequestMappingScoreUpdate">
        update matching_request_mapping
        set status = #{status}
          <if test="status != null and 'E'.toString() eq status">
          , a_team_score = CASE WHEN a_team_matching_request_id = #{aTeamRequestId} THEN #{aTeamScore}
                                ELSE #{bTeamScore}
                           END
          , b_team_score = CASE WHEN b_team_matching_request_id = #{aTeamRequestId} THEN #{aTeamScore}
                                ELSE #{bTeamScore}
                           END
          </if>
        where a_team_matching_request_id = #{aTeamRequestId} OR b_team_matching_request_id = #{aTeamRequestId}
    </update>

    <select id="selectOtherTeamRequestId" parameterType="Integer" resultType="Integer">
        SELECT CASE WHEN a_team_matching_request_id = #{matchingRequestId} THEN b_team_matching_request_id
                    ELSE a_team_matching_request_id
                   END AS other_team_request_id
        FROM matching_request_mapping
        WHERE a_team_matching_request_id = #{matchingRequestId} OR b_team_matching_request_id = #{matchingRequestId}
            AND status IN ('O', 'C')
    </select>

    <delete id="deleteMatchingInfo" parameterType="Integer">
        DELETE FROM matching_info
        WHERE matching_request_id = #{matchingRequestId}
    </delete>

    <delete id="deleteMatchingRequestMapping" parameterType="Integer">
        DELETE FROM matching_request_mapping
        WHERE a_team_matching_request_id = #{matchingRequestId} OR b_team_matching_request_id = #{matchingRequestId}
    </delete>

    <select id="selectOtherTeamRequestIdForResult" parameterType="Integer" resultType="Integer">
        SELECT CASE WHEN a_team_matching_request_id = #{matchingRequestId} THEN b_team_matching_request_id
                    ELSE a_team_matching_request_id
                   END AS other_team_request_id
        FROM matching_request_mapping
        WHERE a_team_matching_request_id = #{matchingRequestId} OR b_team_matching_request_id = #{matchingRequestId}
            AND status = 'S'
    </select>

    <select id="selectMatchingResultInfo" parameterType="Integer" resultType="me.lkh.hometownleague.matching.domain.MatchingResultInfo">
        SELECT id, matching_request_id, our_team_score, other_team_score
        FROM matching_result_info
        WHERE matching_request_id = #{matchingRequestId}
    </select>

    <insert id="insertMatchingResultInfo" parameterType="me.lkh.hometownleague.matching.domain.MatchingResultReportRequest">
        INSERT INTO matching_result_info(matching_request_id, our_team_score, other_team_score)
        VALUES(#{matchingRequestId}, #{ourTeamScore}, #{otherTeamScore})
    </insert>

    <select id="selectMatchingRequestMappingByMatchingRequestId" parameterType="Integer" resultType="me.lkh.hometownleague.matching.domain.MatchingRequestMapping">
        SELECT id
             , a_team_matching_request_id
             , b_team_matching_request_id
             , DATE_FORMAT(match_timestamp, '%Y%m%d%H%i') AS match_timestamp
             , road_address
             , jibun_address
             , latitude
             , longitude
             , status
             , a_team_score
             , b_team_score
             , DATE_FORMAT(create_timestamp, '%Y%m%d%H%i') AS create_timestamp
        FROM matching_request_mapping
        WHERE a_team_matching_request_id = #{matchingRequestId} OR b_team_matching_request_id = #{matchingRequestId}
    </select>

    <select id="selectMatchingHistoryBaseListByTeamId" parameterType="Integer" resultType="me.lkh.hometownleague.matching.domain.response.MatchingHistoryBase">
        SELECT distinct b.id
                      , (SELECT team_id FROM matching_request_info WHERE id = b.a_team_matching_request_id)
                      , (SELECT team_id FROM matching_request_info WHERE id = b.b_team_matching_request_id)
                      , DATE_FORMAT(b.match_timestamp, '%Y%m%d%H%i') AS match_timestamp
                      , b.road_address
                      , b.jibun_address
                      , b.latitude
                      , b.longitude
                      , b.status
                      , (SELECT code_name FROM common_code WHERE group_id = '0011' AND CODE = b.status AND use_yn = 'Y')
                      , b.a_team_score
                      , b.b_team_score
                      , DATE_FORMAT(b.create_timestamp, '%Y%m%d%H%i') AS create_timestamp
        FROM matching_request_info a INNER JOIN matching_request_mapping b ON (a.id = b.a_team_matching_request_id OR a.id = b.b_team_matching_request_id)
                                                                             AND b.status IN ('E', 'F')
        WHERE a.process_yn = 'Y'
          AND a.team_id = #{teamId}
        LIMIT #{offset}, #{count}
    </select>

    <select id="selectAllTeamInfo" parameterType="Integer" resultType="me.lkh.hometownleague.matching.domain.response.MatchingHistoryTeam">
    SELECT id, name, ci_path
    FROM team_info
    WHERE id in
        <foreach collection='teamIdSet' item='item' open='(' close=')' separator=','>
            #{item}
        </foreach>
    </select>

</mapper>